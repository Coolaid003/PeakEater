name: Create release draft
on: pull_request

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    secrets:
      MACOS_BUILD_CERTIFICATE_BASE64: ${{ secrets.MACOS_BUILD_CERTIFICATE_BASE64 }}
      MACOS_P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
      MACOS_BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MACOS_BUILD_PROVISION_PROFILE_BASE64 }}
      MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
      MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
      MACOS_APPLE_PASSWORD: ${{ secrets.MACOS_APPLE_PASSWORD }}
      MACOS_APPLE_TEAM_ID: ${{ secrets.MACOS_APPLE_TEAM_ID }}
      MACOS_APPLE_IDENTITY: ${{ secrets.MACOS_APPLE_IDENTITY }}

  release:
    name: Bundle & publish release draft
    runs-on: ubuntu-22.04
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: Setup
        run: |
          sudo apt-get install jq
          pip3 install conan==2.0.4
      - name: Download macOS build artifacts
        uses: actions/download-artifact@v3
        with:
          name: macos
          path: build/macos
      - name: Download Windows build artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows
          path: build/windows
      - name: Download Linux build artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux
          path: build/linux
      - id: get-version
        run: |
          version=$( conan inspect . --format json | jq -r '.version' )
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Prepare release artifacts
        run: |
          mkdir release
          mv build/macos/peakeater.dmg release/peakeater-macOS-${{ steps.get-version.outputs.version }}-universal.dmg
          mv build/windows/peakeater.zip release/peakeater-Windows-${{ steps.get-version.outputs.version }}-x86_64.zip
          mv build/linux/peakeater.zip release/peakeater-linux-${{ steps.get-version.outputs.version }}-x86_64.zip
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          removeArtifacts: true
          makeLatest: true
          tag: "v${{ steps.get-version.outputs.version }}"
          artifacts: "release/*"
