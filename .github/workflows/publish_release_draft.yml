name: Publish Release Draft
run-name: Release draft for commit ${{ github.sha }}
on:
  push:
    branches:
      - release/*
env:
  BUILD_TYPE: Release
  VST_TARGET_NAME: PeakEater_VST3
  AU_TARGET_NAME: PeakEater_AU
  JUCE_REVISION: 2f98020
  BUILD_ID: '${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}'
jobs:
  macos:
    name: macOS
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: |
          echo $PATH
          python --version
          which python
          node --version
          which node
          npm --version
          which npm
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.MACOS_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.MACOS_P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.MACOS_BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Init Git Submodules
        run: git submodule update --init --recursive
      - name: Checkout JUCE
        run: cd ${{github.workspace}}/Dependencies/JUCE && git checkout ${{env.JUCE_REVISION}}
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DJUCE_BUILD_EXAMPLES=OFF -DJUCE_BUILD_EXTRAS=ON
      - name: Build VST3
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target ${{env.VST_TARGET_NAME}}
      - name: Build AU
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target ${{env.AU_TARGET_NAME}}
      - name: Package
        env:
          MACOS_APPLE_IDENTITY: ${{ secrets.MACOS_APPLE_IDENTITY }}
          MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
          MACOS_APPLE_PASSWORD: ${{ secrets.MACOS_APPLE_PASSWORD }}
          MACOS_APPLE_TEAM_ID: ${{ secrets.MACOS_APPLE_TEAM_ID }}
        run: python ${{github.workspace}}/Scripts/Release/MacOS.py --release_type=${{env.BUILD_TYPE}} --sign_and_notarize=True
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: PeakEater_macOS_${{env.BUILD_ID}}
          path: ${{github.workspace}}/build/
      - uses: ncipollo/release-action@v1
        with:
          artifacts: ${{github.workspace}}/build/release/PeakEater.dmg
          draft: true

  windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Wix
        uses: actions/checkout@v2
        with:
          repository: fbarresi/wix
          path: wix
      - name: Init Git Submodules
        run: git submodule update --init --recursive
      - name: Checkout JUCE
        run: cd ${{github.workspace}}\Dependencies\JUCE && git checkout ${{env.JUCE_REVISION}}
      - name: Configure CMake 
        run: cmake . -B ${{github.workspace}}\build -G 'Visual Studio 17 2022' -A x64 -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE -DJUCE_BUILD_EXAMPLES=OFF -DJUCE_BUILD_EXTRAS=ON
      - name: Build VST3
        run: cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}} --target ${{env.VST_TARGET_NAME}}
      - name: Package
        run: python.exe ${{github.workspace}}\Scripts\Release\Windows.py --release_type=${{env.BUILD_TYPE}} --wix_compiler_path="wix\\tools\\candle.exe" --wix_linker_path="wix\\tools\\light.exe"
        shell: cmd
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: PeakEater_Windows_${{env.BUILD_ID}}
          path: ${{github.workspace}}\build\
      - uses: ncipollo/release-action@v1
        with:
          artifacts: ${{github.workspace}}\build\PeakEater_artefacts\${{env.BUILD_TYPE}}\VST3\PeakEater.vst3\Contents\x86_64-win\PeakEater.vst3
          draft: true
